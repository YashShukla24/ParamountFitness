{"ast":null,"code":"import _classCallCheck from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\yash\\\\LearnReact\\\\src\\\\components\\\\UploadImage.jsx\";\nimport React, { Component } from \"react\";\n\nvar UploadImage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadImage, _Component);\n\n  function UploadImage(props) {\n    var _this;\n\n    _classCallCheck(this, UploadImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadImage).call(this, props));\n    _this.state = {\n      file: \"\",\n      imagePreviewUrl: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(UploadImage, [{\n    key: \"_handleSubmit\",\n    value: function _handleSubmit(e) {\n      e.preventDefault(); // TODO: do something with -> this.state.file\n\n      console.log(\"handle uploading-\", this.state.file);\n    }\n  }, {\n    key: \"_handleImageChange\",\n    value: function _handleImageChange(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var reader = new FileReader();\n      var file = e.target.files[0];\n\n      reader.onloadend = function () {\n        _this2.setState({\n          file: file,\n          imagePreviewUrl: reader.result\n        });\n      };\n\n      reader.readAsDataURL(file);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var imagePreviewUrl = this.state.imagePreviewUrl;\n      var $imagePreview = null;\n\n      if (imagePreviewUrl) {\n        $imagePreview = React.createElement(\"img\", {\n          src: imagePreviewUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      } else {\n        $imagePreview = React.createElement(\"div\", {\n          className: \"previewText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"Please select an Image for Preview\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"previewComponent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return _this3._handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"fileInput\",\n        type: \"file\",\n        onChange: function onChange(e) {\n          return _this3._handleImageChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"submitButton\",\n        type: \"submit\",\n        onClick: function onClick(e) {\n          return _this3._handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Upload Image\")), React.createElement(\"div\", {\n        className: \"imgPreview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, $imagePreview));\n    }\n  }]);\n\n  return UploadImage;\n}(Component);\n\nexport default UploadImage;","map":{"version":3,"sources":["D:\\yash\\LearnReact\\src\\components\\UploadImage.jsx"],"names":["React","Component","UploadImage","props","state","file","imagePreviewUrl","e","preventDefault","console","log","reader","FileReader","target","files","onloadend","setState","result","readAsDataURL","$imagePreview","_handleSubmit","_handleImageChange"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,eAAe,EAAE;AAA7B,KAAb;AAFiB;AAGlB;;;;kCAEaC,C,EAAG;AACfA,MAAAA,CAAC,CAACC,cAAF,GADe,CAEf;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKN,KAAL,CAAWC,IAA5C;AACD;;;uCAEkBE,C,EAAG;AAAA;;AACpBA,MAAAA,CAAC,CAACC,cAAF;AAEA,UAAIG,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,UAAIP,IAAI,GAAGE,CAAC,CAACM,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;;AAEAH,MAAAA,MAAM,CAACI,SAAP,GAAmB,YAAM;AACvB,QAAA,MAAI,CAACC,QAAL,CAAc;AACZX,UAAAA,IAAI,EAAEA,IADM;AAEZC,UAAAA,eAAe,EAAEK,MAAM,CAACM;AAFZ,SAAd;AAID,OALD;;AAOAN,MAAAA,MAAM,CAACO,aAAP,CAAqBb,IAArB;AACD;;;6BAEQ;AAAA;;AAAA,UACDC,eADC,GACmB,KAAKF,KADxB,CACDE,eADC;AAEP,UAAIa,aAAa,GAAG,IAApB;;AACA,UAAIb,eAAJ,EAAqB;AACnBa,QAAAA,aAAa,GAAG;AAAK,UAAA,GAAG,EAAEb,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB;AACD,OAFD,MAEO;AACLa,QAAAA,aAAa,GACX;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF;AAGD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,kBAAAZ,CAAC;AAAA,iBAAI,MAAI,CAACa,aAAL,CAAmBb,CAAnB,CAAJ;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAE,kBAAAA,CAAC;AAAA,iBAAI,MAAI,CAACc,kBAAL,CAAwBd,CAAxB,CAAJ;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAE,iBAAAA,CAAC;AAAA,iBAAI,MAAI,CAACa,aAAL,CAAmBb,CAAnB,CAAJ;AAAA,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,CADF,EAeE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BY,aAA7B,CAfF,CADF;AAmBD;;;;EA1DuBlB,S;;AA4D1B,eAAeC,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass UploadImage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { file: \"\", imagePreviewUrl: \"\" };\r\n  }\r\n\r\n  _handleSubmit(e) {\r\n    e.preventDefault();\r\n    // TODO: do something with -> this.state.file\r\n    console.log(\"handle uploading-\", this.state.file);\r\n  }\r\n\r\n  _handleImageChange(e) {\r\n    e.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        file: file,\r\n        imagePreviewUrl: reader.result\r\n      });\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  render() {\r\n    let { imagePreviewUrl } = this.state;\r\n    let $imagePreview = null;\r\n    if (imagePreviewUrl) {\r\n      $imagePreview = <img src={imagePreviewUrl} />;\r\n    } else {\r\n      $imagePreview = (\r\n        <div className=\"previewText\">Please select an Image for Preview</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"previewComponent\">\r\n        <form onSubmit={e => this._handleSubmit(e)}>\r\n          <input\r\n            className=\"fileInput\"\r\n            type=\"file\"\r\n            onChange={e => this._handleImageChange(e)}\r\n          />\r\n          <button\r\n            className=\"submitButton\"\r\n            type=\"submit\"\r\n            onClick={e => this._handleSubmit(e)}\r\n          >\r\n            Upload Image\r\n          </button>\r\n        </form>\r\n        <div className=\"imgPreview\">{$imagePreview}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default UploadImage;\r\n"]},"metadata":{},"sourceType":"module"}