{"ast":null,"code":"import _classCallCheck from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\yash\\\\LearnReact\\\\src\\\\components\\\\Customer.jsx\";\nimport React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { Button, Form, CustomInput, FormGroup, Label, Input, FormText, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport axios from \"axios\";\n\nvar Customer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Customer, _Component);\n\n  function Customer(props) {\n    var _this;\n\n    _classCallCheck(this, Customer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Customer).call(this, props));\n    _this.state = {\n      addmodal: false,\n      addCustomerdata: {\n        CustomerName: \"\",\n        ContactNo: \"\",\n        EmailId: \"\",\n        Address: \"\",\n        FranchiseId: \"\",\n        FranchiseName: \"\",\n        CreatedBy: \"\",\n        CreatedByName: \"\",\n        CreatedDate: \"\",\n        ModifiedBy: \"\",\n        ModifiedByName: \"\",\n        ModifiedDate: \"\",\n        Status: true\n      },\n      editCustomerdata: {\n        CustomerId: \"\",\n        CustomerName: \"\",\n        ContactNo: \"\",\n        EmailId: \"\",\n        Address: \"\",\n        FranchiseId: \"\",\n        FranchiseName: \"\",\n        CreatedBy: \"\",\n        CreatedByName: \"\",\n        CreatedDate: \"\",\n        ModifiedBy: \"\",\n        ModifiedByName: \"\",\n        ModifiedDate: \"\",\n        Status: \"\"\n      },\n      editmodal: false,\n      Customres: [],\n      Franchise: [],\n      Users: [],\n      deleteCustomer: []\n    };\n    _this.addtoggle = _this.addtoggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.edittoggle = _this.edittoggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Customer, [{\n    key: \"addtoggle\",\n    value: function addtoggle() {\n      //alert(\"hi\");\n      this.setState({\n        addmodal: !this.state.addmodal\n      });\n    }\n  }, {\n    key: \"edittoggle\",\n    value: function edittoggle() {\n      this.setState({\n        editmodal: !this.state.editmodal\n      });\n    }\n  }, {\n    key: \"editCustomer\",\n    value: function editCustomer(CustomerId, CustomerName, ContactNo, EmailId, Address, FranchiseId, FranchiseName, CreatedBy, CreatedByName, CreatedDate, ModifiedBy, ModifiedByName, ModifiedDate, Status) {\n      this.setState({\n        editCustomerdata: {\n          CustomerId: CustomerId,\n          CustomerName: CustomerName,\n          ContactNo: ContactNo,\n          EmailId: EmailId,\n          Address: Address,\n          FranchiseId: FranchiseId,\n          FranchiseName: FranchiseName,\n          CreatedBy: CreatedBy,\n          CreatedByName: CreatedByName,\n          CreatedDate: CreatedDate,\n          ModifiedBy: ModifiedBy,\n          ModifiedByName: ModifiedByName,\n          ModifiedDate: ModifiedDate,\n          Status: Status\n        },\n        editmodal: !this.state.editmodal\n      });\n    }\n  }, {\n    key: \"UpdateCustomer\",\n    value: function UpdateCustomer() {\n      var _this2 = this;\n\n      // let {\n      //   CustomerId,\n      //   CustomerName,\n      //   ContactNo,\n      //   EmailId,\n      //   Address,\n      //   FranchiseId,\n      //   CreatedBy,\n      //   CreatedDate,\n      //   ModifiedBy,\n      //   ModifiedDate,\n      //   Status\n      // } = this.state.editCustomerdata;\n      axios.put(\"http://localhost:25512/api/Customer/UpdateCustomer/\", this.state.editCustomerdata).then(function (response) {\n        _this2.refreshData();\n\n        _this2.setState({\n          editmodal: !_this2.state.editmodal,\n          editCustomerdata: {\n            CustomerId: \"\",\n            CustomerName: \"\",\n            ContactNo: \"\",\n            EmailId: \"\",\n            Address: \"\",\n            FranchiseId: \"\",\n            CreatedBy: \"\",\n            CreatedByName: \"\",\n            CreatedDate: \"\",\n            ModifiedBy: \"\",\n            ModifiedByName: \"\",\n            ModifiedDate: \"\",\n            Status: false\n          }\n        });\n      });\n    }\n  }, {\n    key: \"addCustomers\",\n    value: function addCustomers() {\n      var _this3 = this;\n\n      axios.post(\"http://localhost:25512/api/Customer/PutCustomers/\", this.state.addCustomerdata).then(function (response) {\n        _this3.refreshData();\n\n        _this3.setState({\n          addmodal: !_this3.state.addmodal,\n          addCustomerdata: {\n            CustomerName: \"\",\n            ContactNo: \"\",\n            EmailId: \"\",\n            Address: \"\",\n            FranchiseId: \"\",\n            FranchiseName: \"\",\n            CreatedBy: \"\",\n            CreatedByName: \"\",\n            CreatedDate: \"\",\n            ModifiedBy: \"\",\n            ModifiedByName: \"\",\n            ModifiedDate: \"\",\n            Status: false\n          }\n        });\n      });\n    }\n  }, {\n    key: \"refreshData\",\n    value: function refreshData() {\n      var _this4 = this;\n\n      fetch(\"http://localhost:25512/api/Customer/GetCustomer\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this4.setState({\n          Customres: data.result\n        });\n      }).catch(function (error) {\n        return _this4.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"getAllFranchise\",\n    value: function getAllFranchise() {\n      var _this5 = this;\n\n      fetch(\"http://localhost:25512/api/Customer/GetAllFranhMaster/\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this5.setState({\n          Franchise: data.result\n        });\n      }).catch(function (error) {\n        return _this5.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"getAllUser\",\n    value: function getAllUser() {\n      var _this6 = this;\n\n      fetch(\"http://localhost:25512/api/Customer/GetAllUserMaster/\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this6.setState({\n          Users: data.result\n        });\n      }).catch(function (error) {\n        return _this6.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"deleteCustomers\",\n    value: function deleteCustomers(CustomerId) {\n      var _this7 = this;\n\n      alert(\"record no. \".concat(CustomerId, \" deleted\"));\n      var st = this.state.deleteCustomer.Status === true ? \"False\" : \"true\";\n      axios.put(\"http://localhost:25512/api/Customer/UpdateCustomer/\", this.state.editCustomer).then(function (response) {\n        _this7.refreshData();\n\n        _this7.setState({\n          editCustomer: {\n            CustomerId: \"\",\n            Status: st\n          }\n        });\n      });\n    } // deleteCustomers(CustomerId) {\n    //   axios\n    //     .delete(\n    //       \"http://localhost:25512/api/Customer/DeleteCustomer?Id=\" + CustomerId\n    //     )\n    //     .then(response => {\n    //       this.refreshData();\n    //     });\n    // }\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.refreshData();\n      this.getAllFranchise();\n      this.getAllUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      var columns = [{\n        Header: \"CustomerId\",\n        accessor: \"CustomerId\",\n        width: 150,\n        style: {\n          textAlign: \"center\"\n        }\n      }, {\n        Header: \"CustomerName\",\n        accessor: \"CustomerName\",\n        width: 150\n      }, {\n        Header: \"ContactNo\",\n        accessor: \"ContactNo\",\n        sort: \"asc\",\n        sortable: false\n      }, {\n        Header: \"EmailId\",\n        accessor: \"EmailId\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        Header: \"Address\",\n        accessor: \"Address\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        Header: \"FranchiseName\",\n        accessor: \"FranchiseName\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        Header: \"Status\",\n        accessor: \"Status\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        Header: \"Action\",\n        Cell: function Cell(props) {\n          return React.createElement(\"button\", {\n            color: \"danger\",\n            onClick: _this8.deleteCustomers.bind(_this8, _this8.state.CustomerId),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307\n            },\n            __self: this\n          }, \"x\");\n        }\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(ReactTable, {\n        filterable: true,\n        columns: columns,\n        data: this.state.Customres,\n        defaultPageSize: 7,\n        showPaginationTop: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      })); //let statuss = this.state.editCustomerdata.Status == true ? \"true\" : \"false\";\n      // <td>{Cust.Status === true ? \"Active\" : \"InActive\"}</td>\n      // let Customres = this.state.Customres.map(Cust => {\n      //   return (\n      //     <tr key={Cust.CustomerId}>\n      //       <td>{Cust.CustomerId}</td>\n      //       <td>{Cust.CustomerName}</td>\n      //       <td>{Cust.ContactNo}</td>\n      //       <td>{Cust.EmailId}</td>\n      //       <td>{Cust.Address}</td>\n      //       <td>{Cust.FranchiseName}</td>\n      //       <td>{Cust.Status === true ? \"Active\" : \"InActive\"}</td>\n      //       <td>\n      //         <Button\n      //           color=\"success mr-2 \"\n      //           onClick={this.editCustomer.bind(\n      //             this,\n      //             Cust.CustomerId,\n      //             Cust.CustomerName,\n      //             Cust.ContactNo,\n      //             Cust.EmailId,\n      //             Cust.Address,\n      //             Cust.FranchiseId,\n      //             Cust.FranchiseName,\n      //             Cust.CreatedBy,\n      //             Cust.CreatedByName,\n      //             Cust.CreatedDate,\n      //             Cust.ModifiedBy,\n      //             Cust.ModifiedByName,\n      //             Cust.ModifiedDate,\n      //             Cust.Status\n      //           )}\n      //         >\n      //           Edit\n      //         </Button>\n      //         <Button\n      //           color=\"danger\"\n      //           color=\"success\"\n      //           onClick={this.deleteCustomers.bind(\n      //             this,\n      //             Cust.CustomerId,\n      //             Cust.Status\n      //           )}\n      //         >\n      //           {Cust.Status === true ? \"InActive\" : \"Active\"}\n      //         </Button>\n      //       </td>\n      //     </tr>\n      //   );\n      // });\n      //   <div className=\"App-container\">\n      //     <Modal\n      //       isOpen={this.state.addmodal}\n      //       toggle={this.addtoggle}\n      //       // className={this.props.className}\n      //       className=\"modal-dialog modal-lg overlay-content \"\n      //     >\n      //       <ModalHeader toggle={this.addCustomers}>Add New Customer</ModalHeader>\n      //       <ModalBody>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"CustomerName\">Customer Name</Label>\n      //           <Input\n      //             id=\"CustomerName\"\n      //             type=\"Text\"\n      //             value={this.state.addCustomerdata.CustomerName}\n      //             onChange={e => {\n      //               let { addCustomerdata } = this.state;\n      //               addCustomerdata.CustomerName = e.target.value;\n      //               this.setState({ addCustomerdata });\n      //             }}\n      //             placeholder=\"Enter Customer Name\"\n      //           />\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"ContactNo\">Contact No</Label>\n      //           <Input\n      //             id=\"ContactNo\"\n      //             type=\"number\"\n      //             value={this.state.addCustomerdata.ContactNo}\n      //             onChange={e => {\n      //               let { addCustomerdata } = this.state;\n      //               addCustomerdata.ContactNo = e.target.value;\n      //               this.setState({ addCustomerdata });\n      //             }}\n      //             placeholder=\"Enter Contact No\"\n      //           />\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"EmailId\">Email Id</Label>\n      //           <Input\n      //             id=\"EmailId\"\n      //             type=\"Text\"\n      //             value={this.state.addCustomerdata.EmailId}\n      //             onChange={e => {\n      //               let { addCustomerdata } = this.state;\n      //               addCustomerdata.EmailId = e.target.value;\n      //               this.setState({ addCustomerdata });\n      //             }}\n      //             placeholder=\"Enter EmailId\"\n      //           />\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"Address\"> Address</Label>\n      //           <Input\n      //             id=\"Address\"\n      //             type=\"Text\"\n      //             value={this.state.addCustomerdata.Address}\n      //             onChange={e => {\n      //               let { addCustomerdata } = this.state;\n      //               addCustomerdata.Address = e.target.value;\n      //               this.setState({ addCustomerdata });\n      //             }}\n      //             placeholder=\"Enter Address\"\n      //           />\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"exampleSelect\">FranchiseName</Label>\n      //           <select\n      //             className=\"form-control\"\n      //             value={this.state.addCustomerdata.FranchiseId}\n      //             onChange={e => {\n      //               let { addCustomerdata } = this.state;\n      //               addCustomerdata.FranchiseId = e.target.value;\n      //               this.setState({ addCustomerdata });\n      //             }}\n      //           >\n      //             {this.state.Franchise.map(f => {\n      //               return (\n      //                 <option className=\"form-control\" value={f.Franchise_Id}>\n      //                   {f.Franchise_Name}\n      //                 </option>\n      //               );\n      //             })}\n      //           </select>\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"exampleSelect\">CreatedBy</Label>\n      //           <select\n      //             className=\"form-control\"\n      //             value={this.state.addCustomerdata.CreatedBy}\n      //             onChange={e => {\n      //               let { addCustomerdata } = this.state;\n      //               addCustomerdata.CreatedBy = e.target.value;\n      //               this.setState({ addCustomerdata });\n      //             }}\n      //           >\n      //             {this.state.Users.map(u => {\n      //               return (\n      //                 <option className=\"form-control\" value={u.AdminLoginId}>\n      //                   {u.AdminUserName}\n      //                 </option>\n      //               );\n      //             })}\n      //           </select>\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"CustomerName\">CreatedDate</Label>\n      //           <Input\n      //             id=\"CreatedDate\"\n      //             type=\"date\"\n      //             value={this.state.addCustomerdata.CreatedDate}\n      //             onChange={e => {\n      //               let { addCustomerdata } = this.state;\n      //               addCustomerdata.CreatedDate = e.target.value;\n      //               this.setState({ addCustomerdata });\n      //             }}\n      //             placeholder=\"Enter CreatedDate\"\n      //           />\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"exampleSelect\">ModifiedBy</Label>\n      //           <select\n      //             className=\"form-control\"\n      //             value={this.state.addCustomerdata.ModifiedBy}\n      //             onChange={e => {\n      //               let { addCustomerdata } = this.state;\n      //               addCustomerdata.ModifiedBy = e.target.value;\n      //               this.setState({ addCustomerdata });\n      //             }}\n      //           >\n      //             {this.state.Users.map(u => {\n      //               return (\n      //                 <option className=\"form-control\" value={u.AdminLoginId}>\n      //                   {u.AdminUserName}\n      //                 </option>\n      //               );\n      //             })}\n      //           </select>\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"CustomerName\">ModifiedDate</Label>\n      //           <Input\n      //             id=\"ModifiedDate\"\n      //             type=\"date\"\n      //             value={this.state.addCustomerdata.ModifiedDate}\n      //             onChange={e => {\n      //               let { addCustomerdata } = this.state;\n      //               addCustomerdata.ModifiedDate = e.target.value;\n      //               this.setState({ addCustomerdata });\n      //             }}\n      //             placeholder=\"Enter ModifiedDate\"\n      //           />\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"exampleSelect\">Status</Label>\n      //           <select\n      //             name=\"Status\"\n      //             className=\"form-control\"\n      //             value={this.state.addCustomerdata.Status}\n      //             onChange={e => {\n      //               let { addCustomerdata } = this.state;\n      //               addCustomerdata.Status = e.target.value;\n      //               this.setState({ addCustomerdata });\n      //             }}\n      //           >\n      //             <option className=\"form-control\" value=\"true\">\n      //               true\n      //             </option>\n      //             <option className=\"form-control\" value=\"false\">\n      //               false\n      //             </option>\n      //           </select>\n      //         </FormGroup>\n      //         {/* <FormGroup className=\"col-md-6\">\n      //           <Label for=\"Status\">Status</Label>\n      //           <Input\n      //             id=\"Status\"\n      //             type=\"Text\"\n      //             value={this.state.addCustomerdata.Status}\n      //             onChange={e => {\n      //               let { addCustomerdata } = this.state;\n      //               addCustomerdata.Status = e.target.value;\n      //               this.setState({ addCustomerdata });\n      //             }}\n      //             placeholder=\"Enter Status\"\n      //           />\n      //         </FormGroup> */}\n      //       </ModalBody>\n      //       <ModalFooter>\n      //         <Button color=\"primary \" onClick={this.addCustomers.bind(this)}>\n      //           Add New Customer\n      //         </Button>\n      //         <Button color=\"secondary \" onClick={this.addtoggle}>\n      //           Cancel\n      //         </Button>\n      //       </ModalFooter>\n      //     </Modal>\n      //     {/* Edit Model Starts */}\n      //     <Modal\n      //       isOpen={this.state.editmodal}\n      //       toggle={this.edittoggle}\n      //       className=\"modal-dialog modal-lg overlay-content \"\n      //     >\n      //       <ModalHeader toggle={this.editCustomer}>Edit Customer</ModalHeader>\n      //       <ModalBody>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"CustomerName\">Customer Name</Label>\n      //           <Input\n      //             id=\"CustomerName\"\n      //             type=\"Text\"\n      //             value={this.state.editCustomerdata.CustomerName}\n      //             onChange={e => {\n      //               let { editCustomerdata } = this.state;\n      //               editCustomerdata.CustomerName = e.target.value;\n      //               this.setState({ editCustomerdata });\n      //             }}\n      //             placeholder=\"Enter Customer Name\"\n      //           />\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"ContactNo\">Contact No</Label>\n      //           <Input\n      //             id=\"ContactNo\"\n      //             type=\"Text\"\n      //             value={this.state.editCustomerdata.ContactNo}\n      //             onChange={e => {\n      //               let { editCustomerdata } = this.state;\n      //               editCustomerdata.ContactNo = e.target.value;\n      //               this.setState({ editCustomerdata });\n      //             }}\n      //             placeholder=\"Enter Contact No\"\n      //           />\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"EmailId\">Email Id</Label>\n      //           <Input\n      //             id=\"EmailId\"\n      //             type=\"Text\"\n      //             value={this.state.editCustomerdata.EmailId}\n      //             onChange={e => {\n      //               let { editCustomerdata } = this.state;\n      //               editCustomerdata.EmailId = e.target.value;\n      //               this.setState({ editCustomerdata });\n      //             }}\n      //             placeholder=\"Enter EmailId\"\n      //           />\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"Address\"> Address</Label>\n      //           <Input\n      //             id=\"Address\"\n      //             type=\"Text\"\n      //             value={this.state.editCustomerdata.Address}\n      //             onChange={e => {\n      //               let { editCustomerdata } = this.state;\n      //               editCustomerdata.Address = e.target.value;\n      //               this.setState({ editCustomerdata });\n      //             }}\n      //             placeholder=\"Enter Address\"\n      //           />\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"exampleSelect\">FranchiseName</Label>\n      //           <select\n      //             className=\"form-control\"\n      //             value={this.state.editCustomerdata.FranchiseId}\n      //             onChange={e => {\n      //               let { editCustomerdata } = this.state;\n      //               editCustomerdata.FranchiseId = e.target.value;\n      //               this.setState({ editCustomerdata });\n      //             }}\n      //           >\n      //             {this.state.Franchise.map(f => {\n      //               return (\n      //                 <option value={f.Franchise_Id} className=\"form-control\">\n      //                   {\" \"}\n      //                   {f.Franchise_Name}\n      //                 </option>\n      //               );\n      //             })}\n      //           </select>\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"exampleSelect\">CreatedBy</Label>\n      //           <select\n      //             className=\"form-control\"\n      //             value={this.state.editCustomerdata.CreatedBy}\n      //             onChange={e => {\n      //               let { editCustomerdata } = this.state;\n      //               editCustomerdata.CreatedBy = e.target.value;\n      //               this.setState({ editCustomerdata });\n      //             }}\n      //           >\n      //             {this.state.Users.map(u => {\n      //               return (\n      //                 <option className=\"form-control\" value={u.AdminLoginId}>\n      //                   {u.AdminUserName}\n      //                 </option>\n      //               );\n      //             })}\n      //           </select>\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"CustomerName\">CreatedDate</Label>\n      //           <Input\n      //             id=\"CreatedDate\"\n      //             type=\"Text\"\n      //             value={this.state.editCustomerdata.CreatedDate}\n      //             onChange={e => {\n      //               let { editCustomerdata } = this.state;\n      //               editCustomerdata.CreatedDate = e.target.value;\n      //               this.setState({ editCustomerdata });\n      //             }}\n      //             placeholder=\"Enter CreatedDate\"\n      //           />\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"exampleSelect\">ModifiedBy</Label>\n      //           <select\n      //             className=\"form-control\"\n      //             value={this.state.editCustomerdata.ModifiedBy}\n      //             onChange={e => {\n      //               let { editCustomerdata } = this.state;\n      //               editCustomerdata.ModifiedBy = e.target.value;\n      //               this.setState({ editCustomerdata });\n      //             }}\n      //           >\n      //             {this.state.Users.map(u => {\n      //               return (\n      //                 <option className=\"form-control\" value={u.AdminLoginId}>\n      //                   {u.AdminUserName}\n      //                 </option>\n      //               );\n      //             })}\n      //           </select>\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"CustomerName\">ModifiedDate</Label>\n      //           <Input\n      //             id=\"ModifiedDate\"\n      //             type=\"Text\"\n      //             value={this.state.editCustomerdata.ModifiedDate}\n      //             onChange={e => {\n      //               let { editCustomerdata } = this.state;\n      //               editCustomerdata.ModifiedDate = e.target.value;\n      //               this.setState({ editCustomerdata });\n      //             }}\n      //             placeholder=\"Enter ModifiedDate\"\n      //           />\n      //         </FormGroup>\n      //         <FormGroup className=\"col-md-6\">\n      //           <Label for=\"exampleSelect\">Status</Label>\n      //           <input\n      //             name=\"Status\"\n      //             type=\"checkbox\"\n      //             value={this.state.editCustomerdata.Status}\n      //             onChange={e => {\n      //               let { editCustomerdata } = this.state;\n      //               editCustomerdata.Status = e.target.value;\n      //               this.setState({ editCustomerdata });\n      //             }}\n      //             checked={this.state.editCustomerdata.Status}\n      //           />\n      //           {/* <select\n      //             name=\"Status\"\n      //             className=\"form-control\"\n      //             value={this.state.editCustomerdata.Status}\n      //             onChange={e => {\n      //               let { editCustomerdata } = this.state;\n      //               editCustomerdata.Status = e.target.value;\n      //               this.setState({ editCustomerdata });\n      //             }}\n      //           >\n      //             <option className=\"form-control\" value={statuss}>\n      //               {statuss}\n      //             </option>\n      //           </select> */}\n      //         </FormGroup>\n      //       </ModalBody>\n      //       <ModalFooter>\n      //         <Button color=\"primary \" onClick={this.UpdateCustomer.bind(this)}>\n      //           Edit Customer\n      //         </Button>\n      //         <Button color=\"secondary \" onClick={this.edittoggle}>\n      //           Cancel\n      //         </Button>\n      //       </ModalFooter>\n      //     </Modal>\n      //     <h2>Customers</h2>\n      //     <table>\n      //       <tr>\n      //         <td colSpan=\"4\" align=\"left\">\n      //           <Button color=\"primary\" onClick={this.addtoggle}>\n      //             Add New Customer\n      //           </Button>\n      //         </td>\n      //       </tr>\n      //     </table>\n      //     <table>\n      //       <thead>\n      //         <td>#</td>\n      //         <td>Name</td>\n      //         <td>ContactNo</td>\n      //         <td>EmailId</td>\n      //         <td>Address</td>\n      //         <td>FranchiseName</td>\n      //         <td>Status</td>\n      //         <td>Action</td>\n      //       </thead>\n      //       <tbody>{Customres}</tbody>\n      //     </table>\n      //   </div>\n      //);\n    }\n  }]);\n\n  return Customer;\n}(Component);\n\nexport default Customer;","map":{"version":3,"sources":["D:\\yash\\LearnReact\\src\\components\\Customer.jsx"],"names":["React","Component","ReactTable","Button","Form","CustomInput","FormGroup","Label","Input","FormText","Modal","ModalHeader","ModalBody","ModalFooter","axios","Customer","props","state","addmodal","addCustomerdata","CustomerName","ContactNo","EmailId","Address","FranchiseId","FranchiseName","CreatedBy","CreatedByName","CreatedDate","ModifiedBy","ModifiedByName","ModifiedDate","Status","editCustomerdata","CustomerId","editmodal","Customres","Franchise","Users","deleteCustomer","addtoggle","bind","edittoggle","setState","put","then","response","refreshData","post","fetch","json","data","result","catch","error","isLoading","alert","st","editCustomer","getAllFranchise","getAllUser","columns","Header","accessor","width","style","textAlign","sort","sortable","Cell","deleteCustomers"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  CustomInput,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass Customer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      addmodal: false,\r\n      addCustomerdata: {\r\n        CustomerName: \"\",\r\n        ContactNo: \"\",\r\n        EmailId: \"\",\r\n        Address: \"\",\r\n        FranchiseId: \"\",\r\n        FranchiseName: \"\",\r\n        CreatedBy: \"\",\r\n        CreatedByName: \"\",\r\n        CreatedDate: \"\",\r\n        ModifiedBy: \"\",\r\n        ModifiedByName: \"\",\r\n        ModifiedDate: \"\",\r\n        Status: true\r\n      },\r\n      editCustomerdata: {\r\n        CustomerId: \"\",\r\n        CustomerName: \"\",\r\n        ContactNo: \"\",\r\n        EmailId: \"\",\r\n        Address: \"\",\r\n        FranchiseId: \"\",\r\n        FranchiseName: \"\",\r\n        CreatedBy: \"\",\r\n        CreatedByName: \"\",\r\n        CreatedDate: \"\",\r\n        ModifiedBy: \"\",\r\n        ModifiedByName: \"\",\r\n        ModifiedDate: \"\",\r\n        Status: \"\"\r\n      },\r\n\r\n      editmodal: false,\r\n      Customres: [],\r\n      Franchise: [],\r\n      Users: [],\r\n      deleteCustomer: []\r\n    };\r\n    this.addtoggle = this.addtoggle.bind(this);\r\n    this.edittoggle = this.edittoggle.bind(this);\r\n  }\r\n\r\n  addtoggle() {\r\n    //alert(\"hi\");\r\n    this.setState({\r\n      addmodal: !this.state.addmodal\r\n    });\r\n  }\r\n  edittoggle() {\r\n    this.setState({\r\n      editmodal: !this.state.editmodal\r\n    });\r\n  }\r\n\r\n  editCustomer(\r\n    CustomerId,\r\n    CustomerName,\r\n    ContactNo,\r\n    EmailId,\r\n    Address,\r\n    FranchiseId,\r\n    FranchiseName,\r\n    CreatedBy,\r\n    CreatedByName,\r\n    CreatedDate,\r\n    ModifiedBy,\r\n    ModifiedByName,\r\n    ModifiedDate,\r\n    Status\r\n  ) {\r\n    this.setState({\r\n      editCustomerdata: {\r\n        CustomerId,\r\n        CustomerName,\r\n        ContactNo,\r\n        EmailId,\r\n        Address,\r\n        FranchiseId,\r\n        FranchiseName,\r\n        CreatedBy,\r\n        CreatedByName,\r\n        CreatedDate,\r\n        ModifiedBy,\r\n        ModifiedByName,\r\n        ModifiedDate,\r\n        Status\r\n      },\r\n      editmodal: !this.state.editmodal\r\n    });\r\n  }\r\n  UpdateCustomer() {\r\n    // let {\r\n    //   CustomerId,\r\n    //   CustomerName,\r\n    //   ContactNo,\r\n    //   EmailId,\r\n    //   Address,\r\n    //   FranchiseId,\r\n    //   CreatedBy,\r\n    //   CreatedDate,\r\n    //   ModifiedBy,\r\n    //   ModifiedDate,\r\n    //   Status\r\n    // } = this.state.editCustomerdata;\r\n\r\n    axios\r\n      .put(\r\n        \"http://localhost:25512/api/Customer/UpdateCustomer/\",\r\n        this.state.editCustomerdata\r\n      )\r\n      .then(response => {\r\n        this.refreshData();\r\n        this.setState({\r\n          editmodal: !this.state.editmodal,\r\n          editCustomerdata: {\r\n            CustomerId: \"\",\r\n            CustomerName: \"\",\r\n            ContactNo: \"\",\r\n            EmailId: \"\",\r\n            Address: \"\",\r\n            FranchiseId: \"\",\r\n            CreatedBy: \"\",\r\n            CreatedByName: \"\",\r\n            CreatedDate: \"\",\r\n            ModifiedBy: \"\",\r\n            ModifiedByName: \"\",\r\n            ModifiedDate: \"\",\r\n            Status: false\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  addCustomers() {\r\n    axios\r\n      .post(\r\n        \"http://localhost:25512/api/Customer/PutCustomers/\",\r\n        this.state.addCustomerdata\r\n      )\r\n      .then(response => {\r\n        this.refreshData();\r\n        this.setState({\r\n          addmodal: !this.state.addmodal,\r\n          addCustomerdata: {\r\n            CustomerName: \"\",\r\n            ContactNo: \"\",\r\n            EmailId: \"\",\r\n            Address: \"\",\r\n            FranchiseId: \"\",\r\n            FranchiseName: \"\",\r\n            CreatedBy: \"\",\r\n            CreatedByName: \"\",\r\n            CreatedDate: \"\",\r\n            ModifiedBy: \"\",\r\n            ModifiedByName: \"\",\r\n            ModifiedDate: \"\",\r\n            Status: false\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  refreshData() {\r\n    fetch(\"http://localhost:25512/api/Customer/GetCustomer\")\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          Customres: data.result\r\n        });\r\n      })\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n  }\r\n  getAllFranchise() {\r\n    fetch(\"http://localhost:25512/api/Customer/GetAllFranhMaster/\")\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          Franchise: data.result\r\n        });\r\n      })\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n  }\r\n\r\n  getAllUser() {\r\n    fetch(\"http://localhost:25512/api/Customer/GetAllUserMaster/\")\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          Users: data.result\r\n        });\r\n      })\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n  }\r\n  deleteCustomers(CustomerId) {\r\n    alert(`record no. ${CustomerId} deleted`);\r\n    let st = this.state.deleteCustomer.Status === true ? \"False\" : \"true\";\r\n    axios\r\n      .put(\r\n        \"http://localhost:25512/api/Customer/UpdateCustomer/\",\r\n        this.state.editCustomer\r\n      )\r\n      .then(response => {\r\n        this.refreshData();\r\n        this.setState({\r\n          editCustomer: {\r\n            CustomerId: \"\",\r\n            Status: st\r\n          }\r\n        });\r\n      });\r\n  }\r\n  // deleteCustomers(CustomerId) {\r\n  //   axios\r\n  //     .delete(\r\n  //       \"http://localhost:25512/api/Customer/DeleteCustomer?Id=\" + CustomerId\r\n  //     )\r\n  //     .then(response => {\r\n  //       this.refreshData();\r\n  //     });\r\n  // }\r\n\r\n  componentDidMount() {\r\n    this.refreshData();\r\n    this.getAllFranchise();\r\n    this.getAllUser();\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        Header: \"CustomerId\",\r\n        accessor: \"CustomerId\",\r\n        width: 150,\r\n        style: {\r\n          textAlign: \"center\"\r\n        }\r\n      },\r\n      {\r\n        Header: \"CustomerName\",\r\n        accessor: \"CustomerName\",\r\n        width: 150\r\n      },\r\n      {\r\n        Header: \"ContactNo\",\r\n        accessor: \"ContactNo\",\r\n        sort: \"asc\",\r\n        sortable: false\r\n      },\r\n      {\r\n        Header: \"EmailId\",\r\n        accessor: \"EmailId\",\r\n        sort: \"asc\",\r\n        width: 150\r\n      },\r\n      {\r\n        Header: \"Address\",\r\n        accessor: \"Address\",\r\n        sort: \"asc\",\r\n        width: 150\r\n      },\r\n      {\r\n        Header: \"FranchiseName\",\r\n        accessor: \"FranchiseName\",\r\n        sort: \"asc\",\r\n        width: 150\r\n      },\r\n      {\r\n        Header: \"Status\",\r\n        accessor: \"Status\",\r\n        sort: \"asc\",\r\n        width: 150\r\n      },\r\n      {\r\n        Header: \"Action\",\r\n        Cell: props => {\r\n          return (\r\n            <button\r\n              color=\"danger\"\r\n              onClick={this.deleteCustomers.bind(this, this.state.CustomerId)}\r\n            >\r\n              x\r\n            </button>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <ReactTable\r\n          filterable\r\n          columns={columns}\r\n          data={this.state.Customres}\r\n          defaultPageSize={7}\r\n          showPaginationTop={true}\r\n        />\r\n      </div>\r\n    );\r\n    //let statuss = this.state.editCustomerdata.Status == true ? \"true\" : \"false\";\r\n    // <td>{Cust.Status === true ? \"Active\" : \"InActive\"}</td>\r\n\r\n    // let Customres = this.state.Customres.map(Cust => {\r\n    //   return (\r\n    //     <tr key={Cust.CustomerId}>\r\n    //       <td>{Cust.CustomerId}</td>\r\n    //       <td>{Cust.CustomerName}</td>\r\n    //       <td>{Cust.ContactNo}</td>\r\n    //       <td>{Cust.EmailId}</td>\r\n    //       <td>{Cust.Address}</td>\r\n    //       <td>{Cust.FranchiseName}</td>\r\n    //       <td>{Cust.Status === true ? \"Active\" : \"InActive\"}</td>\r\n    //       <td>\r\n    //         <Button\r\n    //           color=\"success mr-2 \"\r\n    //           onClick={this.editCustomer.bind(\r\n    //             this,\r\n    //             Cust.CustomerId,\r\n    //             Cust.CustomerName,\r\n    //             Cust.ContactNo,\r\n    //             Cust.EmailId,\r\n    //             Cust.Address,\r\n    //             Cust.FranchiseId,\r\n    //             Cust.FranchiseName,\r\n    //             Cust.CreatedBy,\r\n    //             Cust.CreatedByName,\r\n    //             Cust.CreatedDate,\r\n    //             Cust.ModifiedBy,\r\n    //             Cust.ModifiedByName,\r\n    //             Cust.ModifiedDate,\r\n    //             Cust.Status\r\n    //           )}\r\n    //         >\r\n    //           Edit\r\n    //         </Button>\r\n\r\n    //         <Button\r\n    //           color=\"danger\"\r\n    //           color=\"success\"\r\n    //           onClick={this.deleteCustomers.bind(\r\n    //             this,\r\n    //             Cust.CustomerId,\r\n    //             Cust.Status\r\n    //           )}\r\n    //         >\r\n    //           {Cust.Status === true ? \"InActive\" : \"Active\"}\r\n    //         </Button>\r\n    //       </td>\r\n    //     </tr>\r\n    //   );\r\n    // });\r\n    //   <div className=\"App-container\">\r\n    //     <Modal\r\n    //       isOpen={this.state.addmodal}\r\n    //       toggle={this.addtoggle}\r\n    //       // className={this.props.className}\r\n    //       className=\"modal-dialog modal-lg overlay-content \"\r\n    //     >\r\n    //       <ModalHeader toggle={this.addCustomers}>Add New Customer</ModalHeader>\r\n    //       <ModalBody>\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"CustomerName\">Customer Name</Label>\r\n    //           <Input\r\n    //             id=\"CustomerName\"\r\n    //             type=\"Text\"\r\n    //             value={this.state.addCustomerdata.CustomerName}\r\n    //             onChange={e => {\r\n    //               let { addCustomerdata } = this.state;\r\n    //               addCustomerdata.CustomerName = e.target.value;\r\n    //               this.setState({ addCustomerdata });\r\n    //             }}\r\n    //             placeholder=\"Enter Customer Name\"\r\n    //           />\r\n    //         </FormGroup>\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"ContactNo\">Contact No</Label>\r\n    //           <Input\r\n    //             id=\"ContactNo\"\r\n    //             type=\"number\"\r\n    //             value={this.state.addCustomerdata.ContactNo}\r\n    //             onChange={e => {\r\n    //               let { addCustomerdata } = this.state;\r\n    //               addCustomerdata.ContactNo = e.target.value;\r\n    //               this.setState({ addCustomerdata });\r\n    //             }}\r\n    //             placeholder=\"Enter Contact No\"\r\n    //           />\r\n    //         </FormGroup>\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"EmailId\">Email Id</Label>\r\n    //           <Input\r\n    //             id=\"EmailId\"\r\n    //             type=\"Text\"\r\n    //             value={this.state.addCustomerdata.EmailId}\r\n    //             onChange={e => {\r\n    //               let { addCustomerdata } = this.state;\r\n    //               addCustomerdata.EmailId = e.target.value;\r\n    //               this.setState({ addCustomerdata });\r\n    //             }}\r\n    //             placeholder=\"Enter EmailId\"\r\n    //           />\r\n    //         </FormGroup>\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"Address\"> Address</Label>\r\n    //           <Input\r\n    //             id=\"Address\"\r\n    //             type=\"Text\"\r\n    //             value={this.state.addCustomerdata.Address}\r\n    //             onChange={e => {\r\n    //               let { addCustomerdata } = this.state;\r\n    //               addCustomerdata.Address = e.target.value;\r\n    //               this.setState({ addCustomerdata });\r\n    //             }}\r\n    //             placeholder=\"Enter Address\"\r\n    //           />\r\n    //         </FormGroup>\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"exampleSelect\">FranchiseName</Label>\r\n    //           <select\r\n    //             className=\"form-control\"\r\n    //             value={this.state.addCustomerdata.FranchiseId}\r\n    //             onChange={e => {\r\n    //               let { addCustomerdata } = this.state;\r\n    //               addCustomerdata.FranchiseId = e.target.value;\r\n    //               this.setState({ addCustomerdata });\r\n    //             }}\r\n    //           >\r\n    //             {this.state.Franchise.map(f => {\r\n    //               return (\r\n    //                 <option className=\"form-control\" value={f.Franchise_Id}>\r\n    //                   {f.Franchise_Name}\r\n    //                 </option>\r\n    //               );\r\n    //             })}\r\n    //           </select>\r\n    //         </FormGroup>\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"exampleSelect\">CreatedBy</Label>\r\n    //           <select\r\n    //             className=\"form-control\"\r\n    //             value={this.state.addCustomerdata.CreatedBy}\r\n    //             onChange={e => {\r\n    //               let { addCustomerdata } = this.state;\r\n    //               addCustomerdata.CreatedBy = e.target.value;\r\n    //               this.setState({ addCustomerdata });\r\n    //             }}\r\n    //           >\r\n    //             {this.state.Users.map(u => {\r\n    //               return (\r\n    //                 <option className=\"form-control\" value={u.AdminLoginId}>\r\n    //                   {u.AdminUserName}\r\n    //                 </option>\r\n    //               );\r\n    //             })}\r\n    //           </select>\r\n    //         </FormGroup>\r\n\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"CustomerName\">CreatedDate</Label>\r\n    //           <Input\r\n    //             id=\"CreatedDate\"\r\n    //             type=\"date\"\r\n    //             value={this.state.addCustomerdata.CreatedDate}\r\n    //             onChange={e => {\r\n    //               let { addCustomerdata } = this.state;\r\n    //               addCustomerdata.CreatedDate = e.target.value;\r\n    //               this.setState({ addCustomerdata });\r\n    //             }}\r\n    //             placeholder=\"Enter CreatedDate\"\r\n    //           />\r\n    //         </FormGroup>\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"exampleSelect\">ModifiedBy</Label>\r\n    //           <select\r\n    //             className=\"form-control\"\r\n    //             value={this.state.addCustomerdata.ModifiedBy}\r\n    //             onChange={e => {\r\n    //               let { addCustomerdata } = this.state;\r\n    //               addCustomerdata.ModifiedBy = e.target.value;\r\n    //               this.setState({ addCustomerdata });\r\n    //             }}\r\n    //           >\r\n    //             {this.state.Users.map(u => {\r\n    //               return (\r\n    //                 <option className=\"form-control\" value={u.AdminLoginId}>\r\n    //                   {u.AdminUserName}\r\n    //                 </option>\r\n    //               );\r\n    //             })}\r\n    //           </select>\r\n    //         </FormGroup>\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"CustomerName\">ModifiedDate</Label>\r\n    //           <Input\r\n    //             id=\"ModifiedDate\"\r\n    //             type=\"date\"\r\n    //             value={this.state.addCustomerdata.ModifiedDate}\r\n    //             onChange={e => {\r\n    //               let { addCustomerdata } = this.state;\r\n    //               addCustomerdata.ModifiedDate = e.target.value;\r\n    //               this.setState({ addCustomerdata });\r\n    //             }}\r\n    //             placeholder=\"Enter ModifiedDate\"\r\n    //           />\r\n    //         </FormGroup>\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"exampleSelect\">Status</Label>\r\n    //           <select\r\n    //             name=\"Status\"\r\n    //             className=\"form-control\"\r\n    //             value={this.state.addCustomerdata.Status}\r\n    //             onChange={e => {\r\n    //               let { addCustomerdata } = this.state;\r\n    //               addCustomerdata.Status = e.target.value;\r\n    //               this.setState({ addCustomerdata });\r\n    //             }}\r\n    //           >\r\n    //             <option className=\"form-control\" value=\"true\">\r\n    //               true\r\n    //             </option>\r\n    //             <option className=\"form-control\" value=\"false\">\r\n    //               false\r\n    //             </option>\r\n    //           </select>\r\n    //         </FormGroup>\r\n\r\n    //         {/* <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"Status\">Status</Label>\r\n    //           <Input\r\n    //             id=\"Status\"\r\n    //             type=\"Text\"\r\n    //             value={this.state.addCustomerdata.Status}\r\n    //             onChange={e => {\r\n    //               let { addCustomerdata } = this.state;\r\n    //               addCustomerdata.Status = e.target.value;\r\n    //               this.setState({ addCustomerdata });\r\n    //             }}\r\n    //             placeholder=\"Enter Status\"\r\n    //           />\r\n    //         </FormGroup> */}\r\n    //       </ModalBody>\r\n\r\n    //       <ModalFooter>\r\n    //         <Button color=\"primary \" onClick={this.addCustomers.bind(this)}>\r\n    //           Add New Customer\r\n    //         </Button>\r\n    //         <Button color=\"secondary \" onClick={this.addtoggle}>\r\n    //           Cancel\r\n    //         </Button>\r\n    //       </ModalFooter>\r\n    //     </Modal>\r\n    //     {/* Edit Model Starts */}\r\n    //     <Modal\r\n    //       isOpen={this.state.editmodal}\r\n    //       toggle={this.edittoggle}\r\n    //       className=\"modal-dialog modal-lg overlay-content \"\r\n    //     >\r\n    //       <ModalHeader toggle={this.editCustomer}>Edit Customer</ModalHeader>\r\n    //       <ModalBody>\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"CustomerName\">Customer Name</Label>\r\n    //           <Input\r\n    //             id=\"CustomerName\"\r\n    //             type=\"Text\"\r\n    //             value={this.state.editCustomerdata.CustomerName}\r\n    //             onChange={e => {\r\n    //               let { editCustomerdata } = this.state;\r\n    //               editCustomerdata.CustomerName = e.target.value;\r\n    //               this.setState({ editCustomerdata });\r\n    //             }}\r\n    //             placeholder=\"Enter Customer Name\"\r\n    //           />\r\n    //         </FormGroup>\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"ContactNo\">Contact No</Label>\r\n    //           <Input\r\n    //             id=\"ContactNo\"\r\n    //             type=\"Text\"\r\n    //             value={this.state.editCustomerdata.ContactNo}\r\n    //             onChange={e => {\r\n    //               let { editCustomerdata } = this.state;\r\n    //               editCustomerdata.ContactNo = e.target.value;\r\n    //               this.setState({ editCustomerdata });\r\n    //             }}\r\n    //             placeholder=\"Enter Contact No\"\r\n    //           />\r\n    //         </FormGroup>\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"EmailId\">Email Id</Label>\r\n    //           <Input\r\n    //             id=\"EmailId\"\r\n    //             type=\"Text\"\r\n    //             value={this.state.editCustomerdata.EmailId}\r\n    //             onChange={e => {\r\n    //               let { editCustomerdata } = this.state;\r\n    //               editCustomerdata.EmailId = e.target.value;\r\n    //               this.setState({ editCustomerdata });\r\n    //             }}\r\n    //             placeholder=\"Enter EmailId\"\r\n    //           />\r\n    //         </FormGroup>\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"Address\"> Address</Label>\r\n    //           <Input\r\n    //             id=\"Address\"\r\n    //             type=\"Text\"\r\n    //             value={this.state.editCustomerdata.Address}\r\n    //             onChange={e => {\r\n    //               let { editCustomerdata } = this.state;\r\n    //               editCustomerdata.Address = e.target.value;\r\n    //               this.setState({ editCustomerdata });\r\n    //             }}\r\n    //             placeholder=\"Enter Address\"\r\n    //           />\r\n    //         </FormGroup>\r\n\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"exampleSelect\">FranchiseName</Label>\r\n    //           <select\r\n    //             className=\"form-control\"\r\n    //             value={this.state.editCustomerdata.FranchiseId}\r\n    //             onChange={e => {\r\n    //               let { editCustomerdata } = this.state;\r\n    //               editCustomerdata.FranchiseId = e.target.value;\r\n    //               this.setState({ editCustomerdata });\r\n    //             }}\r\n    //           >\r\n    //             {this.state.Franchise.map(f => {\r\n    //               return (\r\n    //                 <option value={f.Franchise_Id} className=\"form-control\">\r\n    //                   {\" \"}\r\n    //                   {f.Franchise_Name}\r\n    //                 </option>\r\n    //               );\r\n    //             })}\r\n    //           </select>\r\n    //         </FormGroup>\r\n\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"exampleSelect\">CreatedBy</Label>\r\n    //           <select\r\n    //             className=\"form-control\"\r\n    //             value={this.state.editCustomerdata.CreatedBy}\r\n    //             onChange={e => {\r\n    //               let { editCustomerdata } = this.state;\r\n    //               editCustomerdata.CreatedBy = e.target.value;\r\n    //               this.setState({ editCustomerdata });\r\n    //             }}\r\n    //           >\r\n    //             {this.state.Users.map(u => {\r\n    //               return (\r\n    //                 <option className=\"form-control\" value={u.AdminLoginId}>\r\n    //                   {u.AdminUserName}\r\n    //                 </option>\r\n    //               );\r\n    //             })}\r\n    //           </select>\r\n    //         </FormGroup>\r\n\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"CustomerName\">CreatedDate</Label>\r\n    //           <Input\r\n    //             id=\"CreatedDate\"\r\n    //             type=\"Text\"\r\n    //             value={this.state.editCustomerdata.CreatedDate}\r\n    //             onChange={e => {\r\n    //               let { editCustomerdata } = this.state;\r\n    //               editCustomerdata.CreatedDate = e.target.value;\r\n    //               this.setState({ editCustomerdata });\r\n    //             }}\r\n    //             placeholder=\"Enter CreatedDate\"\r\n    //           />\r\n    //         </FormGroup>\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"exampleSelect\">ModifiedBy</Label>\r\n    //           <select\r\n    //             className=\"form-control\"\r\n    //             value={this.state.editCustomerdata.ModifiedBy}\r\n    //             onChange={e => {\r\n    //               let { editCustomerdata } = this.state;\r\n    //               editCustomerdata.ModifiedBy = e.target.value;\r\n    //               this.setState({ editCustomerdata });\r\n    //             }}\r\n    //           >\r\n    //             {this.state.Users.map(u => {\r\n    //               return (\r\n    //                 <option className=\"form-control\" value={u.AdminLoginId}>\r\n    //                   {u.AdminUserName}\r\n    //                 </option>\r\n    //               );\r\n    //             })}\r\n    //           </select>\r\n    //         </FormGroup>\r\n\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"CustomerName\">ModifiedDate</Label>\r\n    //           <Input\r\n    //             id=\"ModifiedDate\"\r\n    //             type=\"Text\"\r\n    //             value={this.state.editCustomerdata.ModifiedDate}\r\n    //             onChange={e => {\r\n    //               let { editCustomerdata } = this.state;\r\n    //               editCustomerdata.ModifiedDate = e.target.value;\r\n    //               this.setState({ editCustomerdata });\r\n    //             }}\r\n    //             placeholder=\"Enter ModifiedDate\"\r\n    //           />\r\n    //         </FormGroup>\r\n    //         <FormGroup className=\"col-md-6\">\r\n    //           <Label for=\"exampleSelect\">Status</Label>\r\n    //           <input\r\n    //             name=\"Status\"\r\n    //             type=\"checkbox\"\r\n    //             value={this.state.editCustomerdata.Status}\r\n    //             onChange={e => {\r\n    //               let { editCustomerdata } = this.state;\r\n    //               editCustomerdata.Status = e.target.value;\r\n    //               this.setState({ editCustomerdata });\r\n    //             }}\r\n    //             checked={this.state.editCustomerdata.Status}\r\n    //           />\r\n    //           {/* <select\r\n    //             name=\"Status\"\r\n    //             className=\"form-control\"\r\n    //             value={this.state.editCustomerdata.Status}\r\n    //             onChange={e => {\r\n    //               let { editCustomerdata } = this.state;\r\n    //               editCustomerdata.Status = e.target.value;\r\n    //               this.setState({ editCustomerdata });\r\n    //             }}\r\n    //           >\r\n    //             <option className=\"form-control\" value={statuss}>\r\n    //               {statuss}\r\n    //             </option>\r\n    //           </select> */}\r\n    //         </FormGroup>\r\n    //       </ModalBody>\r\n\r\n    //       <ModalFooter>\r\n    //         <Button color=\"primary \" onClick={this.UpdateCustomer.bind(this)}>\r\n    //           Edit Customer\r\n    //         </Button>\r\n    //         <Button color=\"secondary \" onClick={this.edittoggle}>\r\n    //           Cancel\r\n    //         </Button>\r\n    //       </ModalFooter>\r\n    //     </Modal>\r\n\r\n    //     <h2>Customers</h2>\r\n    //     <table>\r\n    //       <tr>\r\n    //         <td colSpan=\"4\" align=\"left\">\r\n    //           <Button color=\"primary\" onClick={this.addtoggle}>\r\n    //             Add New Customer\r\n    //           </Button>\r\n    //         </td>\r\n    //       </tr>\r\n    //     </table>\r\n    //     <table>\r\n    //       <thead>\r\n    //         <td>#</td>\r\n    //         <td>Name</td>\r\n    //         <td>ContactNo</td>\r\n    //         <td>EmailId</td>\r\n    //         <td>Address</td>\r\n    //         <td>FranchiseName</td>\r\n    //         <td>Status</td>\r\n    //         <td>Action</td>\r\n    //       </thead>\r\n    //       <tbody>{Customres}</tbody>\r\n    //     </table>\r\n    //   </div>\r\n    //);\r\n  }\r\n}\r\n\r\nexport default Customer;\r\n"]},"metadata":{},"sourceType":"module"}