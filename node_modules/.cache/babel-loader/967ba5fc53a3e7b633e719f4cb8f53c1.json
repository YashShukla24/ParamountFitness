{"ast":null,"code":"import _classCallCheck from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\yash\\\\LearnReact\\\\src\\\\components\\\\UserTypeCls.jsx\";\nimport React, { Component } from \"react\";\nimport ReactToExcel from \"react-html-table-to-excel\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Form, FormGroup, Label, Input, FormText, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport axios from \"axios\";\nimport { userInfo } from \"os\";\n\nvar UserTypeCls =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserTypeCls, _React$Component);\n\n  function UserTypeCls(props) {\n    var _this;\n\n    _classCallCheck(this, UserTypeCls);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserTypeCls).call(this, props));\n    _this.state = {\n      addmodal: false,\n      editmodal: false,\n      addUserTypedata: {\n        UserType: \"\",\n        Rating: \"\",\n        IsActive: true\n      },\n      editUserTypedata: {\n        UserId: \"\",\n        UserType: \"\",\n        Rating: \"\",\n        IsActive: true\n      },\n      UserTypes: []\n    };\n    _this.addtoggle = _this.addtoggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.edittoggle = _this.edittoggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserTypeCls, [{\n    key: \"refreshData\",\n    value: function refreshData() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:25512/api/UserType/\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          UserTypes: data.result\n        });\n      }).catch(function (error) {\n        return _this2.setState({\n          error: error,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // alert(\"didmount\");\n      this.refreshData();\n    }\n  }, {\n    key: \"addtoggle\",\n    value: function addtoggle() {\n      this.setState({\n        addmodal: !this.state.addmodal\n      });\n    }\n  }, {\n    key: \"edittoggle\",\n    value: function edittoggle() {\n      this.setState({\n        editmodal: !this.state.editmodal\n      });\n    }\n  }, {\n    key: \"editUserType\",\n    value: function editUserType(UserId, UserType, Rating, IsActive) {\n      this.setState({\n        editUserTypedata: {\n          UserId: UserId,\n          UserType: UserType,\n          Rating: Rating,\n          IsActive: IsActive\n        },\n        editmodal: !this.state.editmodal\n      });\n    }\n  }, {\n    key: \"UpdateUserType\",\n    value: function UpdateUserType() {\n      var _this3 = this;\n\n      var _this$state$editUserT = this.state.editUserTypedata,\n          UserId = _this$state$editUserT.UserId,\n          UserType = _this$state$editUserT.UserType,\n          Rating = _this$state$editUserT.Rating,\n          IsActive = _this$state$editUserT.IsActive;\n      axios.put(\"http://localhost:25512/api/UserType/\" + UserId, {\n        UserId: UserId,\n        UserType: UserType,\n        IsActive: IsActive,\n        Rating: Rating\n      }).then(function (response) {\n        _this3.refreshData();\n\n        _this3.setState({\n          editmodal: !_this3.state.editmodal,\n          editUserTypedata: {\n            UserId: \"\",\n            UserType: \"\",\n            Rating: \"\",\n            IsActive: true\n          }\n        });\n      });\n    }\n  }, {\n    key: \"addUserType\",\n    value: function addUserType() {\n      var _this4 = this;\n\n      axios.post(\"http://localhost:25512/api/UserType/\", this.state.addUserTypedata).then(function (response) {\n        _this4.refreshData();\n\n        _this4.setState({\n          addmodal: !_this4.state.addmodal,\n          addUserTypedata: {\n            UserId: \"\",\n            UserType: \"\",\n            Rating: \"\",\n            IsActive: true\n          }\n        }); // console.log(response.data);\n\n      });\n    }\n  }, {\n    key: \"deleteUserType\",\n    value: function deleteUserType(UserId) {\n      var _this5 = this;\n\n      // alert(UserId);\n      axios.delete(\"http://localhost:25512/api/UserType/\" + UserId).then(function (response) {\n        _this5.refreshData();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var UserTypess = this.state.UserTypes.map(function (User) {\n        return React.createElement(\"tr\", {\n          key: User.UserId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, User.UserId), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, User.UserType), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, User.Rating), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, User.IsActive === true ? \"Active\" : \"InActive\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"success mr-2 \",\n          onClick: _this6.editUserType.bind(_this6, User.UserId, User.UserType, User.Rating, User.IsActive),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Button // color=\"danger\"\n        , {\n          color: \"success\",\n          className: \" btn_isactive\",\n          onClick: _this6.deleteUserType.bind(_this6, User.UserId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, User.IsActive === true ? \"Deactivate\" : \"Activate\")));\n      });\n      return React.createElement(\"div\", {\n        className: \"App-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.addmodal,\n        toggle: this.addtoggle,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.addUserType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Add User Type\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"Usertype\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"UserType\"), React.createElement(Input, {\n        id: \"Usertype\",\n        type: \"Text\",\n        value: this.state.addUserTypedata.UserType,\n        onChange: function onChange(e) {\n          var addUserTypedata = _this6.state.addUserTypedata;\n          addUserTypedata.UserType = e.target.value;\n\n          _this6.setState({\n            addUserTypedata: addUserTypedata\n          });\n        },\n        placeholder: \"Enter User Type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleRating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Rating\"), React.createElement(Input, {\n        type: \"Text\",\n        value: this.state.addUserTypedata.Rating,\n        id: \"exampleRating\",\n        onChange: function onChange(e) {\n          var addUserTypedata = _this6.state.addUserTypedata;\n          addUserTypedata.Rating = e.target.value;\n\n          _this6.setState({\n            addUserTypedata: addUserTypedata\n          });\n        },\n        placeholder: \"EnterReating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary \",\n        onClick: this.addUserType.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Add User Type\"), React.createElement(Button, {\n        color: \"secondary \",\n        onClick: this.addtoggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Cancel\"))), React.createElement(Modal, {\n        isOpen: this.state.editmodal,\n        toggle: this.edittoggle,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.editUserType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Edit User Type\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"Usertype\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"UserType\"), React.createElement(Input, {\n        id: \"Usertype\",\n        type: \"Text\",\n        value: this.state.editUserTypedata.UserType,\n        onChange: function onChange(e) {\n          var editUserTypedata = _this6.state.editUserTypedata;\n          editUserTypedata.UserType = e.target.value;\n\n          _this6.setState({\n            editUserTypedata: editUserTypedata\n          });\n        },\n        placeholder: \"Enter User Type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleRating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Rating\"), React.createElement(Input, {\n        type: \"Text\",\n        value: this.state.editUserTypedata.Rating,\n        id: \"exampleRating\",\n        onChange: function onChange(e) {\n          var editUserTypedata = _this6.state.editUserTypedata;\n          editUserTypedata.Rating = e.target.value;\n\n          _this6.setState({\n            editUserTypedata: editUserTypedata\n          });\n        },\n        placeholder: \"EnterReating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary \",\n        onClick: this.UpdateUserType.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Edit User Type\"), React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.edittoggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Cancel\"))), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"User Type Master\"), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"2\",\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.addtoggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Add User Type\")), React.createElement(\"td\", {\n        colSpan: \"2\",\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(ReactToExcel, {\n        table: \"tt1\",\n        filename: \"hh.xlsx\",\n        sheet: \"UserType\",\n        ButtonText: \"Export\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      })))), React.createElement(\"table\", {\n        id: \"tt1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"UserType\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"Rating\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"IsActive\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Action\")), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, UserTypess)));\n    }\n  }]);\n\n  return UserTypeCls;\n}(React.Component);\n\nexport default UserTypeCls;","map":{"version":3,"sources":["D:\\yash\\LearnReact\\src\\components\\UserTypeCls.jsx"],"names":["React","Component","ReactToExcel","Button","Form","FormGroup","Label","Input","FormText","Modal","ModalHeader","ModalBody","ModalFooter","axios","userInfo","UserTypeCls","props","state","addmodal","editmodal","addUserTypedata","UserType","Rating","IsActive","editUserTypedata","UserId","UserTypes","addtoggle","bind","edittoggle","fetch","then","response","json","data","setState","result","catch","error","isLoading","refreshData","put","post","delete","UserTypess","map","User","editUserType","deleteUserType","className","addUserType","e","target","value","UpdateUserType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactToExcel from \"react-html-table-to-excel\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { userInfo } from \"os\";\r\nclass UserTypeCls extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addmodal: false,\r\n      editmodal: false,\r\n      addUserTypedata: {\r\n        UserType: \"\",\r\n        Rating: \"\",\r\n        IsActive: true\r\n      },\r\n      editUserTypedata: {\r\n        UserId: \"\",\r\n        UserType: \"\",\r\n        Rating: \"\",\r\n        IsActive: true\r\n      },    \r\n\r\n      UserTypes: []\r\n    };\r\n\r\n    this.addtoggle = this.addtoggle.bind(this);\r\n    this.edittoggle = this.edittoggle.bind(this);\r\n  }\r\n\r\n  refreshData() {\r\n    fetch(\"http://localhost:25512/api/UserType/\")\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          UserTypes: data.result\r\n        });\r\n      })\r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n  }\r\n  componentDidMount() {\r\n    // alert(\"didmount\");\r\n    this.refreshData();\r\n  }\r\n\r\n  addtoggle() {\r\n    this.setState({\r\n      addmodal: !this.state.addmodal\r\n    });\r\n  }\r\n\r\n  edittoggle() {\r\n    this.setState({\r\n      editmodal: !this.state.editmodal\r\n    });\r\n  }\r\n  editUserType(UserId, UserType, Rating, IsActive) {\r\n    this.setState({\r\n      editUserTypedata: { UserId, UserType, Rating, IsActive },\r\n      editmodal: !this.state.editmodal\r\n    });\r\n  }\r\n\r\n  UpdateUserType() {\r\n    let { UserId, UserType, Rating, IsActive } = this.state.editUserTypedata;\r\n\r\n    axios\r\n      .put(\"http://localhost:25512/api/UserType/\" + UserId, {\r\n        UserId,\r\n        UserType,\r\n        IsActive,\r\n        Rating\r\n      })\r\n      .then(response => {\r\n        this.refreshData();\r\n        this.setState({\r\n          editmodal: !this.state.editmodal,\r\n          editUserTypedata: {\r\n            UserId: \"\",\r\n            UserType: \"\",\r\n            Rating: \"\",\r\n            IsActive: true\r\n          }\r\n        });\r\n      });\r\n  }\r\n  addUserType() {\r\n    axios\r\n      .post(\"http://localhost:25512/api/UserType/\", this.state.addUserTypedata)\r\n      .then(response => {\r\n        this.refreshData();\r\n        this.setState({\r\n          addmodal: !this.state.addmodal,\r\n          addUserTypedata: {\r\n            UserId: \"\",\r\n            UserType: \"\",\r\n            Rating: \"\",\r\n            IsActive: true\r\n          }\r\n        });\r\n\r\n        // console.log(response.data);\r\n      });\r\n  }\r\n  deleteUserType(UserId) {\r\n    // alert(UserId);\r\n    axios\r\n      .delete(\"http://localhost:25512/api/UserType/\" + UserId)\r\n      .then(response => {\r\n        this.refreshData();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let UserTypess = this.state.UserTypes.map(User => {\r\n      return (\r\n        <tr key={User.UserId}>\r\n          <td>{User.UserId}</td>\r\n          <td>{User.UserType}</td>\r\n          <td>{User.Rating}</td>\r\n         <td>{User.IsActive === true ? \"Active\" : \"InActive\"}</td>\r\n\r\n          <td>\r\n            <Button\r\n              color=\"success mr-2 \"\r\n              onClick={this.editUserType.bind(\r\n                this,\r\n                User.UserId,\r\n                User.UserType,\r\n                User.Rating,\r\n                User.IsActive\r\n              )}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n             // color=\"danger\"\r\n              color=\"success\"\r\n              className=\" btn_isactive\"\r\n              onClick={this.deleteUserType.bind(this, User.UserId)}\r\n            >\r\n         {User.IsActive === true ? \"Deactivate\" : \"Activate\"}\r\n\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"App-container\">\r\n        <Modal\r\n          isOpen={this.state.addmodal}\r\n          toggle={this.addtoggle}\r\n          className={this.props.className}\r\n        >\r\n          <ModalHeader toggle={this.addUserType}>Add User Type</ModalHeader>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label for=\"Usertype\">UserType</Label>\r\n              <Input\r\n                id=\"Usertype\"\r\n                type=\"Text\"\r\n                value={this.state.addUserTypedata.UserType}\r\n                onChange={e => {\r\n                  let { addUserTypedata } = this.state;\r\n                  addUserTypedata.UserType = e.target.value;\r\n                  this.setState({ addUserTypedata });\r\n                }}\r\n                placeholder=\"Enter User Type\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleRating\">Rating</Label>\r\n              <Input\r\n                type=\"Text\"\r\n                value={this.state.addUserTypedata.Rating}\r\n                id=\"exampleRating\"\r\n                onChange={e => {\r\n                  let { addUserTypedata } = this.state;\r\n                  addUserTypedata.Rating = e.target.value;\r\n                  this.setState({ addUserTypedata });\r\n                }}\r\n                placeholder=\"EnterReating\"\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button color=\"primary \" onClick={this.addUserType.bind(this)}>\r\n              Add User Type\r\n            </Button>\r\n            <Button color=\"secondary \" onClick={this.addtoggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.editmodal}\r\n          toggle={this.edittoggle}\r\n          className={this.props.className}\r\n        >\r\n          <ModalHeader toggle={this.editUserType}>Edit User Type</ModalHeader>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label for=\"Usertype\">UserType</Label>\r\n              <Input\r\n                id=\"Usertype\"\r\n                type=\"Text\"\r\n                value={this.state.editUserTypedata.UserType}\r\n                onChange={e => {\r\n                  let { editUserTypedata } = this.state;\r\n                  editUserTypedata.UserType = e.target.value;\r\n                  this.setState({ editUserTypedata });\r\n                }}\r\n                placeholder=\"Enter User Type\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleRating\">Rating</Label>\r\n              <Input\r\n                type=\"Text\"\r\n                value={this.state.editUserTypedata.Rating}\r\n                id=\"exampleRating\"\r\n                onChange={e => {\r\n                  let { editUserTypedata } = this.state;\r\n                  editUserTypedata.Rating = e.target.value;\r\n                  this.setState({ editUserTypedata });\r\n                }}\r\n                placeholder=\"EnterReating\"\r\n              />\r\n            </FormGroup>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button color=\"primary \" onClick={this.UpdateUserType.bind(this)}>\r\n              Edit User Type\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={this.edittoggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        <h2>User Type Master</h2>\r\n        <table>\r\n          <tr>\r\n            <td colSpan=\"2\" align=\"left\">\r\n              <Button color=\"primary\" onClick={this.addtoggle}>\r\n                Add User Type\r\n              </Button>\r\n            </td>\r\n            <td colSpan=\"2\" align=\"right\">\r\n              <ReactToExcel\r\n                table=\"tt1\"\r\n                filename=\"hh.xlsx\"\r\n                sheet=\"UserType\"\r\n                ButtonText=\"Export\"\r\n              />\r\n            </td>\r\n          </tr>\r\n        </table>\r\n        <table id=\"tt1\">\r\n          <thead>\r\n            <td>#</td>\r\n            <td>UserType</td>\r\n            <td>Rating</td>\r\n            <td>IsActive</td>\r\n            <td>Action</td>\r\n          </thead>\r\n          <tbody>{UserTypess}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserTypeCls;\r\n"]},"metadata":{},"sourceType":"module"}