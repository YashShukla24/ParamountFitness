{"ast":null,"code":"import _defineProperty from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\yash\\\\LearnReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\yash\\\\LearnReact\\\\src\\\\components\\\\Text2Speech.jsx\";\nimport React, { Component } from 'react';\nimport Speech from 'react-speech';\nimport { Button, Input, Label, FormGroup, Alert } from 'reactstrap';\n\nvar Text2Speech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Text2Speech, _Component);\n\n  function Text2Speech(props) {\n    var _this;\n\n    _classCallCheck(this, Text2Speech);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Text2Speech).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        mytext: ''\n      });\n    };\n\n    _this.state = {\n      mytext: ''\n    };\n    return _this;\n  }\n\n  _createClass(Text2Speech, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var styles = {\n        play: {\n          button: {\n            width: '5%',\n            height: '28',\n            cursor: 'pointer',\n            pointerEvents: 'none',\n            outline: 'none',\n            backgroundColor: 'ghostwhite',\n            border: 'solid 1px rgba(255,255,255,1)',\n            borderRadius: 6\n          }\n        },\n        stop: {\n          button: {\n            width: '28',\n            height: '28',\n            cursor: 'pointer',\n            pointerEvents: 'none',\n            outline: 'none',\n            backgroundColor: 'ghostwhite',\n            border: 'solid 1px rgba(255,255,255,1)',\n            borderRadius: 6\n          }\n        },\n        pause: {\n          button: {\n            width: '28',\n            height: '28',\n            cursor: 'pointer',\n            pointerEvents: 'none',\n            outline: 'none',\n            backgroundColor: 'ghostwhite',\n            border: 'solid 1px rgba(255,255,255,1)',\n            borderRadius: 6\n          }\n        },\n        resume: {\n          button: {\n            width: '28',\n            height: '28',\n            cursor: 'pointer',\n            pointerEvents: 'none',\n            outline: 'none',\n            backgroundColor: 'ghostwhite',\n            border: 'solid 1px rgba(255,255,255,1)',\n            borderRadius: 6\n          }\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: \"Black\",\n          margin: \"5px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Type your Text Here:\"), React.createElement(Input, {\n        style: {\n          backgroundColor: \"#151B54 \",\n          border: \"2px\",\n          width: \"80%\",\n          color: \"white\",\n          fontFamily: \"family-name|generic-family|initial|inherit;\",\n          margin: \"15px\",\n          boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\n        },\n        type: \"textarea\",\n        name: \"mytext\",\n        id: \"mytext\",\n        placeholder: \"Your message *\",\n        rows: \"25\",\n        cols: \"50\",\n        value: this.state.mytext,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(Button, {\n        className: \"btn btn-dark\",\n        style: {\n          margin: \"5px\"\n        },\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Refresh\"), React.createElement(Speech, {\n        style: styles,\n        stop: true,\n        pause: true,\n        resume: true,\n        text: this.state.mytext,\n        pitch: \"0.5\",\n        rate: \"0.5\",\n        volume: \"1\",\n        lang: \"en-GB\",\n        voice: \"Daniel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"|Play|Stop|Pause|Resume|\")));\n    }\n  }]);\n\n  return Text2Speech;\n}(Component);\n\nexport default Text2Speech;","map":{"version":3,"sources":["D:\\yash\\LearnReact\\src\\components\\Text2Speech.jsx"],"names":["React","Component","Speech","Button","Input","Label","FormGroup","Alert","Text2Speech","props","handleChange","event","setState","target","name","value","handleClick","mytext","state","styles","play","button","width","height","cursor","pointerEvents","outline","backgroundColor","border","borderRadius","stop","pause","resume","color","margin","fontFamily","boxShadow","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Speech from 'react-speech';\r\nimport { Button, Input, Label, FormGroup, Alert } from 'reactstrap';\r\n\r\nclass Text2Speech extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          mytext : ''\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n\r\n    }\r\n \r\n    handleClick = () => {\r\n      this.setState({mytext: ''})\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n      \r\n        const styles = {\r\n            play: {\r\n              button: {\r\n                width: '5%',\r\n                height: '28',\r\n                cursor: 'pointer',\r\n                pointerEvents: 'none',\r\n                outline: 'none',\r\n                backgroundColor: 'ghostwhite',\r\n                border: 'solid 1px rgba(255,255,255,1)',\r\n                borderRadius: 6,\r\n                \r\n                \r\n \r\n              },\r\n              \r\n            },\r\n            \r\n            stop: {\r\n                button: {\r\n                  width: '28',\r\n                  height: '28',\r\n                  cursor: 'pointer',\r\n                  pointerEvents: 'none',\r\n                  outline: 'none',\r\n                  backgroundColor: 'ghostwhite',\r\n                  border: 'solid 1px rgba(255,255,255,1)',\r\n                  borderRadius: 6\r\n                  \r\n   \r\n                },\r\n                \r\n              },\r\n              pause: {\r\n                button: {\r\n                  width: '28',\r\n                  height: '28',\r\n                  cursor: 'pointer',\r\n                  pointerEvents: 'none',\r\n                  outline: 'none',\r\n                  backgroundColor: 'ghostwhite',\r\n                  border: 'solid 1px rgba(255,255,255,1)',\r\n                  borderRadius: 6\r\n                  \r\n   \r\n                },\r\n                \r\n              },\r\n              resume:{\r\n                button: {\r\n                  width: '28',\r\n                  height: '28',\r\n                  cursor: 'pointer',\r\n                  pointerEvents: 'none',\r\n                  outline: 'none',\r\n                  backgroundColor: 'ghostwhite',\r\n                  border: 'solid 1px rgba(255,255,255,1)',\r\n                  borderRadius: 6\r\n                  \r\n   \r\n                }\r\n                \r\n              },\r\n          };\r\n          \r\n       \r\n        return (\r\n            \r\n            <div>\r\n   <center>\r\n\r\n                <FormGroup>\r\n               \r\n                    <h1 style={{color:\"Black\",margin:\"5px\"}}>Type your Text Here:</h1>\r\n                    <Input \r\n                    style={{backgroundColor: \"#151B54 \",\r\n                    border:\"2px\",width:\"80%\",\r\n                    color: \"white\",\r\n                    fontFamily: \"family-name|generic-family|initial|inherit;\",\r\n                    margin:\"15px\",\r\n                    boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"}}\r\n                    \r\n                     type=\"textarea\"\r\n                      name=\"mytext\" \r\n                      id=\"mytext\"\r\n                       placeholder=\"Your message *\"\r\n                        rows=\"25\" cols=\"50\"\r\n                         value={this.state.mytext} \r\n                         onChange={(e) => this.handleChange(e)}  />\r\n                        \r\n             </FormGroup>\r\n\r\n             <Button className=\"btn btn-dark\" style={{margin:\"5px\"}} onClick={this.handleClick}>Refresh</Button>\r\n\r\n                <Speech \r\n                \r\n         \r\n                  style ={styles} \r\n               \r\n                   stop={true} \r\n                   pause={true} \r\n                   resume={true} \r\n                   \r\n                    text={this.state.mytext}\r\n                    pitch=\"0.5\"\r\n                    rate=\"0.5\"\r\n                    volume=\"1\"\r\n                    lang=\"en-GB\"\r\n                    voice=\"Daniel\" />\r\n                    <p>|Play|Stop|Pause|Resume|</p>\r\n\r\n                \r\n                    </center>\r\n                   \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Text2Speech;"]},"metadata":{},"sourceType":"module"}